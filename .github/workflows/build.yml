name: Build and Distribute Android APK
on:
  push:
    branches: [main]
    paths: ['apps/native/**', '.github/workflows/build.yml']
  workflow_dispatch:
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Check formatting with Prettier
        run: yarn prettier --check .
      - name: Install Expo CLI
        run: yarn global add expo-cli
      - name: Place google-services.json
        run: |
          if [ -z "${{ secrets.GOOGLE_SERVICES_JSON }}" ]; then
            echo "Error: GOOGLE_SERVICES_JSON secret is not set"
            exit 1
          fi
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json
        working-directory: apps/native
      - name: Run expo prebuild
        run: |
          set -x
          npx expo prebuild --platform android --clean
        working-directory: apps/native
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          # bundler-cache: true
          run: | 
           working-directory: apps/native/android
      - name: Install bundle
        run: |
          gem install bundler
          if [ ! -f Gemfile ]; then
            echo "source 'https://rubygems.org'" > Gemfile
            echo "gem 'fastlane'" >> Gemfile
            echo "gem 'fastlane-plugin-firebase_app_distribution'" >> Gemfile
          fi
          bundle install
        working-directory: apps/native
      - name: Decode Firebase credentials
        run: |
          if [ -z "${{ secrets.FIREBASE_CREDENTIALS }}" ]; then
            echo "Error: FIREBASE_CREDENTIALS secret is not set"
            exit 1
          fi
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 -d > firebase_credentials.json
        working-directory: apps/native/ 
      - name: Build and distribute APK
        run: |
          set -x
          bundle exec fastlane build_debug
        working-directory: apps/native
