name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
      - development
      - test
      - production
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

env:
  DOCKER_BUILD_ARGS: "--build-arg CI_PROJECT_URL"
  DOCKER_SNAPSHOT_IMAGE: ghcr.io/${{ github.repository }}/snapshot:${{ github.sha }}
  DOCKER_RELEASE_IMAGE: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
  KUSTOMIZE_VER: "5.0.0"
  KUBECTL_VER: "1.25.4"
  K8S_KUBECTL_IMAGE: "bitnami/kubectl:1.25.4-debian-11-r8"
  K8S_SCORE_EXTRA_OPTS: "--kubernetes-version v1.25.4 --ignore-test container-image-tag"
  K8S_BASE_APP_NAME: "cad"
  K8S_REVIEW_SPACE: "dev-rentacar"
  K8S_STAGING_SPACE: "test-rentacar"
  K8S_PROD_SPACE: "prod-rentacar"
  K8S_ENVIRONMENT_URL: "http://%{environment_name}.ixorafiner.com"
  REVIEW_ENABLED: "false"
  ROBOT_LINT_DISABLED: "true"
  HELM_BASE_APP_NAME: "ixorasfinder-frontend"
  HELM_CHART_DIR: "./helm/ixorasfinder-frontend"
  HELM_REVIEW_ENABLED: "false"
  SEMREL_CHANGELOG_ENABLED: "true"

jobs:
  gitleaks:
    name: Run Gitleaks Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Gitleaks
        run: |
          curl -sSL https://github.com/zricethezav/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz -o gitleaks.tar.gz
          mkdir -p gitleaks
          tar -xvzf gitleaks.tar.gz -C gitleaks
          sudo mv gitleaks/gitleaks /usr/local/bin

      - name: Run Gitleaks
        run: |
          gitleaks detect --redact -v \
            --exit-code=2 \
            --report-format sarif \
            --report-path gitleaks-results.sarif

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: gitleaks-results.sarif

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks_results
          path: gitleaks-results.sarif
          if-no-files-found: warn

  docker-sbom:
    name: Docker SBOM Generation
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image with cache
        run: |
          docker buildx build \
            --build-arg CI_PROJECT_URL \
            --cache-to=type=inline \
            --cache-from=type=inline \
            -t $DOCKER_SNAPSHOT_IMAGE \
            --load .

      - name: Generate Docker SBOM
        run: |
          mkdir -p reports
          docker save $DOCKER_SNAPSHOT_IMAGE | syft packages -o cyclonedx-json > reports/docker-sbom-${{ github.sha }}.cyclonedx.json

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker_sbom
          path: reports/
          if-no-files-found: warn

  gitops-kustomize:
    name: GitOps Kustomize Commit
    runs-on: ubuntu-latest
    needs: docker-sbom
    if: ${{ github.ref_name == 'main' }}
    env:
      SEMANTIC_USERNAME: ${{ secrets.SEMANTIC_USERNAME }}
      SEMANTIC_PASSWORD: ${{ secrets.SEMANTIC_PASSWORD }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl
          curl -s https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
          sudo mv kustomize /usr/local/bin/

      - name: Configure Git
        run: |
          git config --global user.name "********"
          git config --global user.email "********"
          git remote set-url origin https://${{ env.SEMANTIC_USERNAME }}:${{ env.SEMANTIC_PASSWORD }}@github.com/${{ github.repository }}.git

      - name: Update Kustomization
        run: |
          cd k8s
          NAMESPACE="dev-ixorasfinder"
          if [[ "${{ github.ref_name }}" == "main" ]]; then NAMESPACE="walletwebapp-dev"; fi
          kustomize edit set image $DOCKER_SNAPSHOT_IMAGE
          kustomize edit set namespace $NAMESPACE
          git checkout -B ${{ github.ref_name }}
          git commit -am "[skip ci] ${{ github.ref_name }} image update $DOCKER_SNAPSHOT_IMAGE"
          git push origin ${{ github.ref_name }}
